name: Release

on:
  issue_comment:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Install release automaton
        run: |
          curl -fsSL -o release-automaton https://github.com/appscodelabs/release-automaton/releases/download/v0.0.4/release-automaton-linux-amd64
          chmod +x release-automaton
          sudo mv release-automaton /usr/local/bin/release-automaton

      - name: Install Hugo Tools
        run: |
          curl -fsSL -o hugo-tools https://github.com/appscodelabs/hugo-tools/releases/download/v0.2.12/hugo-tools-linux-amd64
          chmod +x hugo-tools
          sudo mv hugo-tools /usr/local/bin/hugo-tools

      - name: Prepare git
        env:
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          set -x
          git config --global user.name "1gtm"
          git config --global user.email "1gtm@appscode.com"
          git remote set-url origin https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git

      - name: Release
        if: startsWith(github.event.issue.title, 'Release:') && contains(github.event.issue.labels, 'locked') == false
        env:
          GITHUB_USER: 1gtm
          GITHUB_TOKEN: ${{ secrets.LGTM_GITHUB_TOKEN }}
        run: |
          title="${{ github.event.issue.title }}"
          while IFS=$': \r\t' read -r marker v ignored; do
              case $marker in
                  Release)
                      export RELEASE=$(echo $v | tr -d '\r\t')
                      ;;
              esac
          done <<< "$title"

          [ ! -z "$RELEASE" ] || {
              echo "Release number not found in issue title."
              exit 0
          }
          ls -l ${GITHUB_WORKSPACE}/CHANGELOG/${RELEASE}/release.json
          cat ${GITHUB_WORKSPACE}/CHANGELOG/${RELEASE}/release.json
          release-automaton release run \
            --release-tracker=${{ github.event.issue.html_url }} \
            --release-file=${GITHUB_WORKSPACE}/CHANGELOG/${RELEASE}/release.json
